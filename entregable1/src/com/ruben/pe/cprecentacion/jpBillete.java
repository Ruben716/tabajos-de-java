/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.ruben.pe.cprecentacion;
import com.ruben.pe.cmodelo.Billete;
import com.ruben.pe.cmodelo.Cliente;
import com.ruben.pe.cmodelo.ComboItem;
import com.ruben.pe.db.ConexionJava;
import con.ruben.pe.cnegocio.BilleteBO;
import con.ruben.pe.cnegocio.ClienteBO;
import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author ACER
 */
public class jpBillete extends javax.swing.JPanel {
    BilleteBO  tdbo = new  BilleteBO();
    Billete dd = new Billete();
    String idBillete;
   
    Connection conn = ConexionJava.getConnection();
    
    public void listar_Billete (){
        tdbo.listarbillete(tablaBillete);
    }
    
    
    /**
     * Creates new form jpBillete
     */
    public jpBillete() {
        initComponents();
        cargarClientes();
        cargarCompanias();
        listar_Billete();
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtNbillete = new javax.swing.JTextField();
        TxtFecha = new javax.swing.JTextField();
        TxtHora = new javax.swing.JTextField();
        TxtItinerario = new javax.swing.JTextField();
        comboBoxClientes = new javax.swing.JComboBox<>();
        comboBoxCompanias = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBillete = new javax.swing.JTable();
        BtnGuardar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();
        BtnModificar = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Short Plan", 0, 36)); // NOI18N
        jLabel1.setText("BILLETE");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Numero del Billete");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Hora");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Itinerario");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cliente");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Compañía");

        comboBoxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxClientesActionPerformed(evt);
            }
        });

        comboBoxCompanias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCompaniasActionPerformed(evt);
            }
        });

        tablaBillete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaBillete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBilleteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaBillete);

        BtnGuardar.setText("GUARDAR");
        BtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarActionPerformed(evt);
            }
        });

        BtnEliminar.setText("ELIMINAR");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        BtnModificar.setText("MODIFICAR");
        BtnModificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(413, 413, 413)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(TxtNbillete)
                            .addComponent(TxtFecha)
                            .addComponent(TxtHora)
                            .addComponent(TxtItinerario)
                            .addComponent(comboBoxClientes, 0, 313, Short.MAX_VALUE)
                            .addComponent(comboBoxCompanias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(BtnGuardar)
                        .addGap(54, 54, 54)
                        .addComponent(BtnEliminar)
                        .addGap(44, 44, 44)
                        .addComponent(BtnModificar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtNbillete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtItinerario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxCompanias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnGuardar)
                            .addComponent(BtnEliminar)
                            .addComponent(BtnModificar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxClientesActionPerformed
        // TODO add your handling code here:
   
    }//GEN-LAST:event_comboBoxClientesActionPerformed

    private void comboBoxCompaniasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCompaniasActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_comboBoxCompaniasActionPerformed

    private void BtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarActionPerformed
        // TODO add your handling code here:
        String itenselec = (String) comboBoxClientes.getSelectedItem();
        String idpersona = itenselec.split(" ")[0];
        System.out.println(""+idpersona);
        
        //idconpañia 
        String itemSeleccionadoCompania = (String) comboBoxCompanias.getSelectedItem(); // Obtiene el item seleccionado
        String idCompania = itemSeleccionadoCompania.split(" ")[0]; // Separa y toma solo el ID (antes del espacio)
        System.out.println("" + idCompania);

        
        
        
        
        
        try {
        Billete cl = new Billete();
        
        cl.setNumeroBillete(Integer.parseInt(TxtNbillete.getText())); 
        cl.setFecha(TxtFecha.getText()); 
        cl.setHora(TxtHora.getText()); 
        cl.setITINERARIO(TxtItinerario.getText()); 
        cl.setId_cliente(Integer.parseInt(idpersona));
        cl.setId_conpania(Integer.parseInt(idCompania));
        
        // Crear un objeto de negocio y llamar al método para agregar datos
        BilleteBO billeteBO = new BilleteBO();
        String mensaje = billeteBO.Agregarbillete(cl);
        
        JOptionPane.showMessageDialog(this, mensaje);
        
        listar_Billete();
        limpiarCampos();
        
    } catch (SQLException e) {
        // Manejo de excepciones
        JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage());
    } catch (NumberFormatException e) {
        // Manejo de excepciones para formato de número
        JOptionPane.showMessageDialog(this, "Por favor, ingrese valores numéricos válidos.");
    }   catch (ParseException ex) {
            Logger.getLogger(jpBillete.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_BtnGuardarActionPerformed

    private void tablaBilleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBilleteMouseClicked
        // TODO add your handling code here:
        int seleccion  = tablaBillete.rowAtPoint(evt.getPoint());
        idBillete = tablaBillete.getValueAt(seleccion, 0)+"";
        System.out.println(idBillete);
        
        
        TxtNbillete.setText(tablaBillete.getValueAt(seleccion, 1)+"");
        TxtFecha.setText(tablaBillete.getValueAt(seleccion, 2)+"");
        TxtHora.setText(tablaBillete.getValueAt(seleccion, 3)+"");
        TxtItinerario.setText(tablaBillete.getValueAt(seleccion, 4)+"");
        comboBoxClientes.addItem(tablaBillete.getValueAt(seleccion, 5)+"");
        comboBoxCompanias.addItem(tablaBillete.getValueAt(seleccion, 6)+"");
        
        
        
        
    }//GEN-LAST:event_tablaBilleteMouseClicked

    private void BtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarActionPerformed
        // TODO add your handling code here:
        String itenselec = (String) comboBoxClientes.getSelectedItem();
        String idpersona = itenselec.split(" ")[0];
        System.out.println(""+idpersona);
        
        //idconpañia 
        String itemSeleccionadoCompania = (String) comboBoxCompanias.getSelectedItem(); // Obtiene el item seleccionado
        String idCompania = itemSeleccionadoCompania.split(" ")[0]; // Separa y toma solo el ID (antes del espacio)
        System.out.println("" + idCompania);
        
        if (idCompania != null && !idCompania.isEmpty()) {
        try {
            dd.setId_billete(Integer.parseInt(idBillete));
            dd.setNumeroBillete(Integer.parseInt(TxtNbillete.getText())); 
            dd.setFecha(TxtFecha.getText()); 
            dd.setHora(TxtHora.getText()); 
            dd.setITINERARIO(TxtItinerario.getText()); 
            dd.setId_cliente(Integer.parseInt(idpersona));
            dd.setId_conpania(Integer.parseInt(idCompania));
            
            
            String mensaje = tdbo.modificarbillete(dd);
            
            JOptionPane.showMessageDialog(this, mensaje);
            
            listar_Billete();
            
            limpiarCampos();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: Verifique que todos los campos sean válidos.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error de base de datos: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione un registro para modificar.");
    }
        
        
    }//GEN-LAST:event_BtnModificarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        // TODO add your handling code here:
        if (idBillete != null && !idBillete.isEmpty()) {
            try {
                // Establecer el ID del documento a eliminar
                dd.setId_billete(Integer.parseInt(idBillete));
                
                // Llamar al método de negocio para eliminar el documento
                String mensaje = tdbo.eliminarbillete(dd);
                
                // Mostrar mensaje de éxito
                JOptionPane.showMessageDialog(this, mensaje);
                
                listar_Billete();

                
                // Limpiar campos
                limpiarCampos();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar: ID no válido.");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error de base de datos: " + e.getMessage());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un registro para eliminar.");
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnGuardar;
    private javax.swing.JButton BtnModificar;
    private javax.swing.JTextField TxtFecha;
    private javax.swing.JTextField TxtHora;
    private javax.swing.JTextField TxtItinerario;
    private javax.swing.JTextField TxtNbillete;
    private javax.swing.JComboBox<String> comboBoxClientes;
    private javax.swing.JComboBox<String> comboBoxCompanias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaBillete;
    // End of variables declaration//GEN-END:variables
    
    
    

    public jpBillete(Connection conn) {
        setLayout(new FlowLayout());

        // Inicializar combo boxes
        comboBoxClientes = new JComboBox<>();
        comboBoxCompanias = new JComboBox<>();

        // Cargar datos en los combo boxes
        cargarClientes();
        cargarCompanias();

        // Agregar combo boxes al panel
        add(new JLabel("Seleccionar Cliente:"));
        add(comboBoxClientes);
        add(new JLabel("Seleccionar Compañía:"));
        add(comboBoxCompanias);
    }

    private void cargarClientes() {
        System.out.println("Cargando clientes...");
        try {
            Statement statement = conn.createStatement();
            String sql = "SELECT ID_CLIENTE ,NOMBRE FROM CLIENTE"; // Cambia esto si necesitas más información
            ResultSet resultSet = statement.executeQuery(sql);

            while (resultSet.next()) {
                int idCliente = resultSet.getInt("ID_CLIENTE");
                String nombre = resultSet.getString("NOMBRE");
                comboBoxClientes.addItem(String.valueOf(idCliente)+" "+nombre); // Agregar ID_CLIENTE al combo box
            }
            resultSet.close();
            statement.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + e.getMessage());
            System.out.println(e.getMessage());
        }
    }

    private void cargarCompanias() {
        
        try {
            Statement statement = conn.createStatement();
            String sql = "SELECT ID_COMPAÑIA,NOMBRE FROM COMPAÑIA"; // Cambia esto si necesitas más información
            ResultSet resultSet = statement.executeQuery(sql);

            while (resultSet.next()) {
                int idCompania = resultSet.getInt("ID_COMPAÑIA");
                String nombre = resultSet.getString("NOMBRE");
                comboBoxCompanias.addItem(String.valueOf(idCompania)+" "+nombre);
            }
            resultSet.close();
            statement.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar compañías: " + e.getMessage());
            System.out.println(e.getMessage());
        }
    }

    // Puedes agregar métodos para manejar eventos de selección si es necesario
    
    private void limpiarCampos() {
        TxtNbillete.setText("");
        TxtFecha.setText("");
        TxtHora.setText("");
        TxtItinerario.setText("");
        
}
}



